# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import typing

class ServoClient:
    r"""
    This class communicates with Bluepill Servo Rust firmware. You can pass a port string to the
    constructor to connect to a specific port. If no port is passed, it will try to connect to the first
    available device by product string.
    """
    def __new__(cls,port:typing.Optional[builtins.str]): ...
    def wait_closed(self) -> None:
        ...

    def pingx2(self, val:builtins.int) -> builtins.int:
        r"""
        Send a ping to the board and return the response.
        A number is sent to the device, and the device is expected to return the same number times 2.
        
        :param val: The number to send to the device.
        :return: The number returned by the device: val * 2.
        """
        ...

    def get_id(self) -> builtins.int:
        r"""
        Get the unique ID of the board.
        The ID is a 92-bit number, which is padded to 128 bits with zeros.
        
        :return: The unique ID of the board.
        """
        ...

    def set_angle(self, angle:builtins.int) -> None:
        r"""
        Set the angle of the servo.
        
        :param angle: The angle to set the servo to (0-180).
        """
        ...

    def get_angle(self) -> builtins.int:
        r"""
        Get the angle of the servo.
        
        :return: The angle of the servo (0-180).
        """
        ...


